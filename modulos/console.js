console.log("'console.log' Muestra un mensaje en la consola/terminal en la que se ejecuta el código")
console.info("'console.info' Muestra un mensaje informativo en la consola. Algunos navegadores identifican con un ícono 'i' estos mensajes en la consola web")
console.error("'console.error' muestra un mensaje de error. Algunas terminales, como Linux, lo  identifican con otro color")
console.warn("'console.warn' muestra un mensaje de advertencia(warning) en la consola. Errores o riesgos potenciales.")
console.table("'console.table' imprime una tabla a partir de un objeto pasado como parámetro. Visualización más legible")
console.table([{a:1, b:7}, {a:5, b:8}])
console.group("group")
console.log("'console.group(<nombreGrupo>)' sirve para agrupar varios logs como parte de un mismo conjunto de elementos")
console.log("Esto permite diferenciarlos de otros logs impresos en consola")
console.log("Para dejar de agrupar logs, usamos el comando 'console.group(<nombreGrupo>)'")
console.groupEnd("conversacion")
console.log("'console.count(<parametro>)' crea un contador autoincremntal que se incrementa cada vez que ejecutamos la función con el mismo el mismo valor como parámetro")
console.count("Ejemplo 1")
console.count("Ejemplo 2")
console.count("Ejemplo 1")
console.count("Ejemplo 2")
console.count("Ejemplo 1")
console.count("Ejemplo 2")
console.log("'console.countReset(<nombreGrupo>)' permite reiniciar el contador del valor recibido como parámetro")
console.log("Se ejecuta console.count('contador')")
console.count('contador')
console.count('contador')
console.count('contador')
console.log("Se reinicia el contador con console.countReset('contador')")
console.countReset('contador')
console.count('contador')
console.time('cronometro')
console.log("'console.time(<temporizador>)' inicializa un contador con asignado al valor pasado como parámetro")
console.log("Para concluirlo, debemos invocar la función 'console.timeEnd(<temporizador>)'")
console.timeEnd('cronometro')
console.log("'clear' limpia la consola")
//console.clear()```